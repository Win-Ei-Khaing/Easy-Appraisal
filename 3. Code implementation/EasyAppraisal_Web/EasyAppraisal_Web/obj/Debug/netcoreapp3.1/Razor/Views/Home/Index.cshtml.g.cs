#pragma checksum "C:\ETAG\WEK\MyOwn\.Net Core\Easy Appraisal\3. Code implementation\EasyAppraisal_Web\EasyAppraisal_Web\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "6a69cf5d1e602a10df404fcdc9c709a06146ff60"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\ETAG\WEK\MyOwn\.Net Core\Easy Appraisal\3. Code implementation\EasyAppraisal_Web\EasyAppraisal_Web\Views\_ViewImports.cshtml"
using EasyAppraisal_Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\ETAG\WEK\MyOwn\.Net Core\Easy Appraisal\3. Code implementation\EasyAppraisal_Web\EasyAppraisal_Web\Views\_ViewImports.cshtml"
using EasyAppraisal_Web.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "C:\ETAG\WEK\MyOwn\.Net Core\Easy Appraisal\3. Code implementation\EasyAppraisal_Web\EasyAppraisal_Web\Views\Home\Index.cshtml"
using Microsoft.AspNetCore.Http;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"6a69cf5d1e602a10df404fcdc9c709a06146ff60", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"9c45d0118a93d83d7402442738dc2c35f325b672", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 3 "C:\ETAG\WEK\MyOwn\.Net Core\Easy Appraisal\3. Code implementation\EasyAppraisal_Web\EasyAppraisal_Web\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";
    var userCode = HttpContextAccessor.HttpContext.Session.GetString("UserCode");

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<style>
    #tblAppraisal tr:nth-child(even) {
        background-color: #E5E5E5;
    }
</style>

<div id=""divBody"" style=""text-align:center""></div>

<div style=""text-align:center"">
    <p id=""appraisalCount"" style=""padding-top:15px;padding-bottom:15px;color:brown""></p>
    <label class=""edit_label"">Please choose Datetime first before you start to make appraisal!</label>
    <div class=""row"" style=""padding-top:15px;padding-bottom:15px;"">
        <div class=""col-4""></div>
        <input id=""appraisalDatetime"" class=""col-4 form-control"" type=""datetime-local"" />
    </div>
    <button id=""btnStartAppraisal"" type='button' class='btn btn-secondary' onclick=""StartAppraisal()"">Start Appraisal</button>
</div>

<table id=""tblAppraisal"">
    <thead>
        <tr id=""appraisalHeader"">
        </tr>
    </thead>
    <tbody id=""appraisalBody"">
    </tbody>
</table>

<div style=""text-align:center; padding-top:30px;"">
    <button id=""btnSaveAppraisal"" type='button' class='btn btn-dark' onclick=""");
            WriteLiteral("SaveAppraisal()\" style=\"width:100%; display:none;\">Save Appraisal</button>\r\n</div>\r\n<script>\r\n    var categoryCount = 0;\r\n    $(\'document\').ready(function () {\r\n        var userData = {\r\n                \'UserCode\': \'");
#nullable restore
#line 42 "C:\ETAG\WEK\MyOwn\.Net Core\Easy Appraisal\3. Code implementation\EasyAppraisal_Web\EasyAppraisal_Web\Views\Home\Index.cshtml"
                        Write(userCode);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"'
            };
        $.ajax({
            url: 'https://localhost:44341/api/usermark/GetOwnedMark',
            type: 'POST',
            data: userData,
            dataType: 'json',
            success: function (result) {
                //alert(result.responseCode);
                var row = """";
                if (result.responseCode == 0) {
                    for (var i = 0; i < result.responseUserMarkModel.length; i++) {
                        row += ""<button type='button' class='btn btn-dark'>"" + result.responseUserMarkModel[i].categoryName + ""<br />"" + result.responseUserMarkModel[i].mark + ""</button>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"";
                    }
                    $(""#divBody"").append(row);
                    if (result.responseAppraisalCount > 1)
                        $(""#appraisalCount"").append(""<b>You have made appraisal on other users for "" + result.responseAppraisalCount + "" times!</b>"");
                    else 
                        $(""#appraisalCount""");
            WriteLiteral(@").append(""<b>You have made appraisal on other users for "" + result.responseAppraisalCount + "" time!</b>"");
                    }
                else
                    alert(result.responseMessage);
            }
        });
    });

    //to prepare default marks with all users
    function StartAppraisal() {
        var appraisalDatetime = $(""#appraisalDatetime"").val().toString().trim();
        //alert(appraisalDatetime);
        var errorMsg = """";
        if (appraisalDatetime.length == 0)
            errorMsg += ""Appraisal Datetime is required \r\n"";

        if (errorMsg != """") {
            $(""#btnSaveAppraisal"").hide();
            alert(errorMsg);
        }
        else {
            $(""#btnStartAppraisal"").attr(""disabled"", ""disabled"");
            $(""#appraisalDatetime"").attr(""disabled"", ""disabled"");
            var postData = {
                'givenOn': appraisalDatetime,
                'userCode': '");
#nullable restore
#line 85 "C:\ETAG\WEK\MyOwn\.Net Core\Easy Appraisal\3. Code implementation\EasyAppraisal_Web\EasyAppraisal_Web\Views\Home\Index.cshtml"
                        Write(userCode);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"'
            };
            $.ajax({
                url: 'https://localhost:44341/api/usermark/StartForAppraisal',
                type: 'POST',
                data: postData,
                dataType: 'json',
                success: function (result) {
                    //clear table first
                    $(""#appraisalHeader"").val('');
                    $(""#appraisalBody"").val('');
                    var header = ""<th>SN</th><th style='display: none;'>User ID</th><th>User Name</th>"";
                    if (result.responseCode == 0) {
                        categoryCount = result.responseLatestSummaryModel.categoryNames.length;
                        for (var i = 0; i < result.responseLatestSummaryModel.categoryNames.length; i++) {
                            header += ""<th>"" + result.responseLatestSummaryModel.categoryNames[i] + ""</th>"";
                        }
                        $(""#appraisalHeader"").append(header);

                        var resultUserData = resu");
            WriteLiteral(@"lt.responseLatestSummaryModel.userMarks;
                        for (var i = 0; i < resultUserData.length; i++) {
                            var bodyRow = ""<tr><td style='text-align:center'>""+(i+1)+""</td>"";

                            var rowData = resultUserData[i];
                            bodyRow += ""<td style='display: none;'>"" + rowData[0] + ""</td>"";
                            bodyRow += ""<td>"" + rowData[1] + ""</td>"";

                            for (var j = 0; j < result.responseLatestSummaryModel.categoryNames.length; j++)
                            {
                                var id = rowData[0] + ""_C_"" + (j+1).toString();
                                //alert(rowData[j + 2]);
                                bodyRow += ""<td id='"" + id + ""' class='MarkData' contenteditable='true' style='text-align:center'  onkeypress='CheckMark(event)'  onfocus='ClearOldValue(event)' onclick='ClearOldValue(event)' onmousedown='ClearOldValue(event)' onfocusout='ResetOldValue(event)' onmouseo");
            WriteLiteral(@"ut='ResetOldValue(event)'>"" + rowData[j+2] + ""</td>"";
                            }
                            bodyRow += ""</tr>"";
                            $(""#appraisalBody"").append(bodyRow);
                        }

                        //change datatable to html table
                        $('#tblAppraisal').DataTable({
                        });
                    }
                    else
                        alert(result.responseMessage);
                }
            });
            $(""#btnSaveAppraisal"").show();
        }
    }

    //to check value to be only between 0 and 5
    function CheckMark(e) {
        var id = $(e.target).attr(""id"");
        var value = document.getElementById(id).innerHTML;
        //alert(id + ""___"" + value);
        var havingError = false;
        if (!(e.which >= 48 && e.keyCode <= 53))
            havingError = true;

        if (!havingError) {
            var newValue = parseInt(value + """" + String.fromCharCode(e.which));");
            WriteLiteral(@"
            if (newValue < 0 || newValue > 5)
                    havingError = true;
            }
        if (havingError) {
            alert(""Please rate only between 0 and 5"");
            e.preventDefault();
        }
    }

    var oldValue = """";
    //to clear old data
    function ClearOldValue(e) {
        var id = $(e.target).attr(""id"");
        oldValue = document.getElementById(id).innerHTML;
        document.getElementById(id).innerHTML = """";
    }

    //to put old data back if there is no new data
    function ResetOldValue(e) {
        //alert(oldValue);
        var id = $(e.target).attr(""id"");
        var value = document.getElementById(id).innerHTML;
        if (value.trim() == """")
            document.getElementById(id).innerHTML = oldValue;
    }

    //to save appraisal
    function SaveAppraisal() {
        $(""#btnSaveAppraisal"").attr(""disabled"", ""disabled"");
        if (confirm('Are you sure to save this appraisal? You can\'t change this appraisal back.'))");
            WriteLiteral(@" {
            var appraisalDatetime = $(""#appraisalDatetime"").val().toString().trim();

            var userMarkData = new Array();
            for (var i = 1; i < $('#tblAppraisal tr').length; i++) {
                var userMark = new Array();
                var userName = $(""#tblAppraisal"").find('tr:eq(' + i + ')').find('td:eq(' + 1 + ')').text();
                userMark.push(userName);
                for (var j = 0; j < categoryCount; j++)
                {
                    var mark = $(""#tblAppraisal"").find('tr:eq(' + i + ')').find('td:eq(' + (j + 3) + ')').text();
                    userMark.push(mark);
                }
                userMarkData.push(userMark);
            }

            var postData = {
                'givenOn': appraisalDatetime,
                'givenBy': '");
#nullable restore
#line 192 "C:\ETAG\WEK\MyOwn\.Net Core\Easy Appraisal\3. Code implementation\EasyAppraisal_Web\EasyAppraisal_Web\Views\Home\Index.cshtml"
                       Write(userCode);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                'userMarkData': userMarkData
            };
            $.ajax({
                url: 'https://localhost:44341/api/usermark/SaveAppraisal',
                type: 'POST',
                data: postData,
                dataType: 'json',
                success: function (result) {
                    alert(result.responseMessage);
                    if (result.responseCode == 0)
                        window.location.reload();
                }
            });
        }
    }
</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public IHttpContextAccessor HttpContextAccessor { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
